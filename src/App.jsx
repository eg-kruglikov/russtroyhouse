import {
  BrowserRouter as Router,
  Routes,
  Route,
  Navigate,
  useLocation,
  useNavigationType,
} from "react-router-dom";

import { useEffect } from "react";

import Home from "./pages/Home";
import ProjectPage from "./pages/ProjectPage";

import CapitalRepairPage from "./pages/Repair/CapitalRepairPage";
import CosmeticRepairPage from "./pages/Repair/CosmeticRepairPage";
import DesignerRepairPage from "./pages/Repair/DesignerRepairPage";

import PortfolioProjectPage from "./pages/Portfolio/Project";

import { useScrollRestoration } from "./hooks/useScrollRestoration";

const RedirectHandler = () => {
  useEffect(() => {
    const search = window.location.search;

    if (search.startsWith("?/")) {
      const newPath = search.slice(2); // —É–±–∏—Ä–∞–µ–º ?/
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º pushState, —á—Ç–æ–±—ã –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Å—Ç–∞–ª–∞—Å—å –≤ –∏—Å—Ç–æ—Ä–∏–∏
      window.history.pushState(null, "", "/" + newPath);
    }
  }, []);

  return null;
};

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const App = () => {
  return (
    <Router>
      <AppContent />
    </Router>
  );
};

// –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ useLocation/useNavigationType
const AppContent = () => {
  const location = useLocation();
  const action = useNavigationType();

  // üîπ –•—É–∫, –∫–æ—Ç–æ—Ä—ã–π —á–∏–Ω–∏—Ç refresh —Å GitHub Pages
  useEffect(() => {
    const params = new URLSearchParams(window.location.search);
    const redirect = params.get("redirect");
    if (redirect) {
      window.history.replaceState(null, "", redirect);
    }
  }, []);

  useEffect(() => {
    if (action === "POP") {
      console.log("‚¨Ö –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –ù–∞–∑–∞–¥!", location.pathname);
    }
  }, [action, location]);

  useScrollRestoration();

  return (
    <>
      <RedirectHandler />
      <Routes>
        <Route path="/" element={<Home />} />
        {/* –°—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–º–æ–Ω—Ç–æ–≤ */}
        <Route path="/repair/cosmetic" element={<CosmeticRepairPage />} />
        <Route path="/repair/capital" element={<CapitalRepairPage />} />
        <Route path="/repair/designer" element={<DesignerRepairPage />} />

        <Route path="/project/:id" element={<ProjectPage />} />
        <Route path="/portfolio/:slug" element={<PortfolioProjectPage />} />

        <Route path="*" element={<Navigate to="/" />} />
      </Routes>
    </>
  );
};

export default App;
